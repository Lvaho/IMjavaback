package zjc.zhixun.db.domain;

import java.time.LocalDateTime;
import java.util.ArrayList;
import java.util.List;

public class IMUserExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table t_user
     *
     * @mbg.generated
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table t_user
     *
     * @mbg.generated
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table t_user
     *
     * @mbg.generated
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_user
     *
     * @mbg.generated
     */
    public IMUserExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_user
     *
     * @mbg.generated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_user
     *
     * @mbg.generated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_user
     *
     * @mbg.generated
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_user
     *
     * @mbg.generated
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_user
     *
     * @mbg.generated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_user
     *
     * @mbg.generated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_user
     *
     * @mbg.generated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_user
     *
     * @mbg.generated
     */
    public IMUserExample orderBy(String orderByClause) {
        this.setOrderByClause(orderByClause);
        return this;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_user
     *
     * @mbg.generated
     */
    public IMUserExample orderBy(String ... orderByClauses) {
        StringBuffer sb = new StringBuffer();
        for (int i = 0; i < orderByClauses.length; i++) {
            sb.append(orderByClauses[i]);
            if (i < orderByClauses.length - 1) {
                sb.append(" , ");
            }
        }
        this.setOrderByClause(sb.toString());
        return this;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_user
     *
     * @mbg.generated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_user
     *
     * @mbg.generated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria(this);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_user
     *
     * @mbg.generated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_user
     *
     * @mbg.generated
     */
    public static Criteria newAndCreateCriteria() {
        IMUserExample example = new IMUserExample();
        return example.createCriteria();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_user
     *
     * @mbg.generated
     */
    public IMUserExample when(boolean condition, IExampleWhen then) {
        if (condition) {
            then.example(this);
        }
        return this;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_user
     *
     * @mbg.generated
     */
    public IMUserExample when(boolean condition, IExampleWhen then, IExampleWhen otherwise) {
        if (condition) {
            then.example(this);
        } else {
            otherwise.example(this);
        }
        return this;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table t_user
     *
     * @mbg.generated
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andIdIsNull() {
            addCriterion("id is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("id is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(Integer value) {
            addCriterion("id =", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_user
         *
         * @mbg.generated
         */
        public Criteria andIdEqualToColumn(IMUser.Column column) {
            addCriterion(new StringBuilder("id = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(Integer value) {
            addCriterion("id <>", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_user
         *
         * @mbg.generated
         */
        public Criteria andIdNotEqualToColumn(IMUser.Column column) {
            addCriterion(new StringBuilder("id <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(Integer value) {
            addCriterion("id >", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_user
         *
         * @mbg.generated
         */
        public Criteria andIdGreaterThanColumn(IMUser.Column column) {
            addCriterion(new StringBuilder("id > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("id >=", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_user
         *
         * @mbg.generated
         */
        public Criteria andIdGreaterThanOrEqualToColumn(IMUser.Column column) {
            addCriterion(new StringBuilder("id >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdLessThan(Integer value) {
            addCriterion("id <", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_user
         *
         * @mbg.generated
         */
        public Criteria andIdLessThanColumn(IMUser.Column column) {
            addCriterion(new StringBuilder("id < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(Integer value) {
            addCriterion("id <=", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_user
         *
         * @mbg.generated
         */
        public Criteria andIdLessThanOrEqualToColumn(IMUser.Column column) {
            addCriterion(new StringBuilder("id <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdIn(List<Integer> values) {
            addCriterion("id in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<Integer> values) {
            addCriterion("id not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(Integer value1, Integer value2) {
            addCriterion("id between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(Integer value1, Integer value2) {
            addCriterion("id not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andUidIsNull() {
            addCriterion("_uid is null");
            return (Criteria) this;
        }

        public Criteria andUidIsNotNull() {
            addCriterion("_uid is not null");
            return (Criteria) this;
        }

        public Criteria andUidEqualTo(String value) {
            addCriterion("_uid =", value, "uid");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_user
         *
         * @mbg.generated
         */
        public Criteria andUidEqualToColumn(IMUser.Column column) {
            addCriterion(new StringBuilder("_uid = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUidNotEqualTo(String value) {
            addCriterion("_uid <>", value, "uid");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_user
         *
         * @mbg.generated
         */
        public Criteria andUidNotEqualToColumn(IMUser.Column column) {
            addCriterion(new StringBuilder("_uid <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUidGreaterThan(String value) {
            addCriterion("_uid >", value, "uid");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_user
         *
         * @mbg.generated
         */
        public Criteria andUidGreaterThanColumn(IMUser.Column column) {
            addCriterion(new StringBuilder("_uid > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUidGreaterThanOrEqualTo(String value) {
            addCriterion("_uid >=", value, "uid");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_user
         *
         * @mbg.generated
         */
        public Criteria andUidGreaterThanOrEqualToColumn(IMUser.Column column) {
            addCriterion(new StringBuilder("_uid >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUidLessThan(String value) {
            addCriterion("_uid <", value, "uid");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_user
         *
         * @mbg.generated
         */
        public Criteria andUidLessThanColumn(IMUser.Column column) {
            addCriterion(new StringBuilder("_uid < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUidLessThanOrEqualTo(String value) {
            addCriterion("_uid <=", value, "uid");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_user
         *
         * @mbg.generated
         */
        public Criteria andUidLessThanOrEqualToColumn(IMUser.Column column) {
            addCriterion(new StringBuilder("_uid <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUidLike(String value) {
            addCriterion("_uid like", value, "uid");
            return (Criteria) this;
        }

        public Criteria andUidNotLike(String value) {
            addCriterion("_uid not like", value, "uid");
            return (Criteria) this;
        }

        public Criteria andUidIn(List<String> values) {
            addCriterion("_uid in", values, "uid");
            return (Criteria) this;
        }

        public Criteria andUidNotIn(List<String> values) {
            addCriterion("_uid not in", values, "uid");
            return (Criteria) this;
        }

        public Criteria andUidBetween(String value1, String value2) {
            addCriterion("_uid between", value1, value2, "uid");
            return (Criteria) this;
        }

        public Criteria andUidNotBetween(String value1, String value2) {
            addCriterion("_uid not between", value1, value2, "uid");
            return (Criteria) this;
        }

        public Criteria andNameIsNull() {
            addCriterion("_name is null");
            return (Criteria) this;
        }

        public Criteria andNameIsNotNull() {
            addCriterion("_name is not null");
            return (Criteria) this;
        }

        public Criteria andNameEqualTo(String value) {
            addCriterion("_name =", value, "name");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_user
         *
         * @mbg.generated
         */
        public Criteria andNameEqualToColumn(IMUser.Column column) {
            addCriterion(new StringBuilder("_name = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andNameNotEqualTo(String value) {
            addCriterion("_name <>", value, "name");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_user
         *
         * @mbg.generated
         */
        public Criteria andNameNotEqualToColumn(IMUser.Column column) {
            addCriterion(new StringBuilder("_name <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andNameGreaterThan(String value) {
            addCriterion("_name >", value, "name");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_user
         *
         * @mbg.generated
         */
        public Criteria andNameGreaterThanColumn(IMUser.Column column) {
            addCriterion(new StringBuilder("_name > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andNameGreaterThanOrEqualTo(String value) {
            addCriterion("_name >=", value, "name");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_user
         *
         * @mbg.generated
         */
        public Criteria andNameGreaterThanOrEqualToColumn(IMUser.Column column) {
            addCriterion(new StringBuilder("_name >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andNameLessThan(String value) {
            addCriterion("_name <", value, "name");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_user
         *
         * @mbg.generated
         */
        public Criteria andNameLessThanColumn(IMUser.Column column) {
            addCriterion(new StringBuilder("_name < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andNameLessThanOrEqualTo(String value) {
            addCriterion("_name <=", value, "name");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_user
         *
         * @mbg.generated
         */
        public Criteria andNameLessThanOrEqualToColumn(IMUser.Column column) {
            addCriterion(new StringBuilder("_name <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andNameLike(String value) {
            addCriterion("_name like", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameNotLike(String value) {
            addCriterion("_name not like", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameIn(List<String> values) {
            addCriterion("_name in", values, "name");
            return (Criteria) this;
        }

        public Criteria andNameNotIn(List<String> values) {
            addCriterion("_name not in", values, "name");
            return (Criteria) this;
        }

        public Criteria andNameBetween(String value1, String value2) {
            addCriterion("_name between", value1, value2, "name");
            return (Criteria) this;
        }

        public Criteria andNameNotBetween(String value1, String value2) {
            addCriterion("_name not between", value1, value2, "name");
            return (Criteria) this;
        }

        public Criteria andDisplayNameIsNull() {
            addCriterion("_display_name is null");
            return (Criteria) this;
        }

        public Criteria andDisplayNameIsNotNull() {
            addCriterion("_display_name is not null");
            return (Criteria) this;
        }

        public Criteria andDisplayNameEqualTo(String value) {
            addCriterion("_display_name =", value, "displayName");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_user
         *
         * @mbg.generated
         */
        public Criteria andDisplayNameEqualToColumn(IMUser.Column column) {
            addCriterion(new StringBuilder("_display_name = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDisplayNameNotEqualTo(String value) {
            addCriterion("_display_name <>", value, "displayName");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_user
         *
         * @mbg.generated
         */
        public Criteria andDisplayNameNotEqualToColumn(IMUser.Column column) {
            addCriterion(new StringBuilder("_display_name <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDisplayNameGreaterThan(String value) {
            addCriterion("_display_name >", value, "displayName");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_user
         *
         * @mbg.generated
         */
        public Criteria andDisplayNameGreaterThanColumn(IMUser.Column column) {
            addCriterion(new StringBuilder("_display_name > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDisplayNameGreaterThanOrEqualTo(String value) {
            addCriterion("_display_name >=", value, "displayName");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_user
         *
         * @mbg.generated
         */
        public Criteria andDisplayNameGreaterThanOrEqualToColumn(IMUser.Column column) {
            addCriterion(new StringBuilder("_display_name >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDisplayNameLessThan(String value) {
            addCriterion("_display_name <", value, "displayName");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_user
         *
         * @mbg.generated
         */
        public Criteria andDisplayNameLessThanColumn(IMUser.Column column) {
            addCriterion(new StringBuilder("_display_name < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDisplayNameLessThanOrEqualTo(String value) {
            addCriterion("_display_name <=", value, "displayName");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_user
         *
         * @mbg.generated
         */
        public Criteria andDisplayNameLessThanOrEqualToColumn(IMUser.Column column) {
            addCriterion(new StringBuilder("_display_name <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDisplayNameLike(String value) {
            addCriterion("_display_name like", value, "displayName");
            return (Criteria) this;
        }

        public Criteria andDisplayNameNotLike(String value) {
            addCriterion("_display_name not like", value, "displayName");
            return (Criteria) this;
        }

        public Criteria andDisplayNameIn(List<String> values) {
            addCriterion("_display_name in", values, "displayName");
            return (Criteria) this;
        }

        public Criteria andDisplayNameNotIn(List<String> values) {
            addCriterion("_display_name not in", values, "displayName");
            return (Criteria) this;
        }

        public Criteria andDisplayNameBetween(String value1, String value2) {
            addCriterion("_display_name between", value1, value2, "displayName");
            return (Criteria) this;
        }

        public Criteria andDisplayNameNotBetween(String value1, String value2) {
            addCriterion("_display_name not between", value1, value2, "displayName");
            return (Criteria) this;
        }

        public Criteria andGenderIsNull() {
            addCriterion("_gender is null");
            return (Criteria) this;
        }

        public Criteria andGenderIsNotNull() {
            addCriterion("_gender is not null");
            return (Criteria) this;
        }

        public Criteria andGenderEqualTo(Integer value) {
            addCriterion("_gender =", value, "gender");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_user
         *
         * @mbg.generated
         */
        public Criteria andGenderEqualToColumn(IMUser.Column column) {
            addCriterion(new StringBuilder("_gender = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andGenderNotEqualTo(Integer value) {
            addCriterion("_gender <>", value, "gender");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_user
         *
         * @mbg.generated
         */
        public Criteria andGenderNotEqualToColumn(IMUser.Column column) {
            addCriterion(new StringBuilder("_gender <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andGenderGreaterThan(Integer value) {
            addCriterion("_gender >", value, "gender");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_user
         *
         * @mbg.generated
         */
        public Criteria andGenderGreaterThanColumn(IMUser.Column column) {
            addCriterion(new StringBuilder("_gender > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andGenderGreaterThanOrEqualTo(Integer value) {
            addCriterion("_gender >=", value, "gender");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_user
         *
         * @mbg.generated
         */
        public Criteria andGenderGreaterThanOrEqualToColumn(IMUser.Column column) {
            addCriterion(new StringBuilder("_gender >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andGenderLessThan(Integer value) {
            addCriterion("_gender <", value, "gender");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_user
         *
         * @mbg.generated
         */
        public Criteria andGenderLessThanColumn(IMUser.Column column) {
            addCriterion(new StringBuilder("_gender < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andGenderLessThanOrEqualTo(Integer value) {
            addCriterion("_gender <=", value, "gender");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_user
         *
         * @mbg.generated
         */
        public Criteria andGenderLessThanOrEqualToColumn(IMUser.Column column) {
            addCriterion(new StringBuilder("_gender <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andGenderIn(List<Integer> values) {
            addCriterion("_gender in", values, "gender");
            return (Criteria) this;
        }

        public Criteria andGenderNotIn(List<Integer> values) {
            addCriterion("_gender not in", values, "gender");
            return (Criteria) this;
        }

        public Criteria andGenderBetween(Integer value1, Integer value2) {
            addCriterion("_gender between", value1, value2, "gender");
            return (Criteria) this;
        }

        public Criteria andGenderNotBetween(Integer value1, Integer value2) {
            addCriterion("_gender not between", value1, value2, "gender");
            return (Criteria) this;
        }

        public Criteria andPortraitIsNull() {
            addCriterion("_portrait is null");
            return (Criteria) this;
        }

        public Criteria andPortraitIsNotNull() {
            addCriterion("_portrait is not null");
            return (Criteria) this;
        }

        public Criteria andPortraitEqualTo(String value) {
            addCriterion("_portrait =", value, "portrait");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_user
         *
         * @mbg.generated
         */
        public Criteria andPortraitEqualToColumn(IMUser.Column column) {
            addCriterion(new StringBuilder("_portrait = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPortraitNotEqualTo(String value) {
            addCriterion("_portrait <>", value, "portrait");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_user
         *
         * @mbg.generated
         */
        public Criteria andPortraitNotEqualToColumn(IMUser.Column column) {
            addCriterion(new StringBuilder("_portrait <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPortraitGreaterThan(String value) {
            addCriterion("_portrait >", value, "portrait");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_user
         *
         * @mbg.generated
         */
        public Criteria andPortraitGreaterThanColumn(IMUser.Column column) {
            addCriterion(new StringBuilder("_portrait > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPortraitGreaterThanOrEqualTo(String value) {
            addCriterion("_portrait >=", value, "portrait");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_user
         *
         * @mbg.generated
         */
        public Criteria andPortraitGreaterThanOrEqualToColumn(IMUser.Column column) {
            addCriterion(new StringBuilder("_portrait >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPortraitLessThan(String value) {
            addCriterion("_portrait <", value, "portrait");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_user
         *
         * @mbg.generated
         */
        public Criteria andPortraitLessThanColumn(IMUser.Column column) {
            addCriterion(new StringBuilder("_portrait < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPortraitLessThanOrEqualTo(String value) {
            addCriterion("_portrait <=", value, "portrait");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_user
         *
         * @mbg.generated
         */
        public Criteria andPortraitLessThanOrEqualToColumn(IMUser.Column column) {
            addCriterion(new StringBuilder("_portrait <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPortraitLike(String value) {
            addCriterion("_portrait like", value, "portrait");
            return (Criteria) this;
        }

        public Criteria andPortraitNotLike(String value) {
            addCriterion("_portrait not like", value, "portrait");
            return (Criteria) this;
        }

        public Criteria andPortraitIn(List<String> values) {
            addCriterion("_portrait in", values, "portrait");
            return (Criteria) this;
        }

        public Criteria andPortraitNotIn(List<String> values) {
            addCriterion("_portrait not in", values, "portrait");
            return (Criteria) this;
        }

        public Criteria andPortraitBetween(String value1, String value2) {
            addCriterion("_portrait between", value1, value2, "portrait");
            return (Criteria) this;
        }

        public Criteria andPortraitNotBetween(String value1, String value2) {
            addCriterion("_portrait not between", value1, value2, "portrait");
            return (Criteria) this;
        }

        public Criteria andMobileIsNull() {
            addCriterion("_mobile is null");
            return (Criteria) this;
        }

        public Criteria andMobileIsNotNull() {
            addCriterion("_mobile is not null");
            return (Criteria) this;
        }

        public Criteria andMobileEqualTo(String value) {
            addCriterion("_mobile =", value, "mobile");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_user
         *
         * @mbg.generated
         */
        public Criteria andMobileEqualToColumn(IMUser.Column column) {
            addCriterion(new StringBuilder("_mobile = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andMobileNotEqualTo(String value) {
            addCriterion("_mobile <>", value, "mobile");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_user
         *
         * @mbg.generated
         */
        public Criteria andMobileNotEqualToColumn(IMUser.Column column) {
            addCriterion(new StringBuilder("_mobile <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andMobileGreaterThan(String value) {
            addCriterion("_mobile >", value, "mobile");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_user
         *
         * @mbg.generated
         */
        public Criteria andMobileGreaterThanColumn(IMUser.Column column) {
            addCriterion(new StringBuilder("_mobile > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andMobileGreaterThanOrEqualTo(String value) {
            addCriterion("_mobile >=", value, "mobile");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_user
         *
         * @mbg.generated
         */
        public Criteria andMobileGreaterThanOrEqualToColumn(IMUser.Column column) {
            addCriterion(new StringBuilder("_mobile >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andMobileLessThan(String value) {
            addCriterion("_mobile <", value, "mobile");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_user
         *
         * @mbg.generated
         */
        public Criteria andMobileLessThanColumn(IMUser.Column column) {
            addCriterion(new StringBuilder("_mobile < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andMobileLessThanOrEqualTo(String value) {
            addCriterion("_mobile <=", value, "mobile");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_user
         *
         * @mbg.generated
         */
        public Criteria andMobileLessThanOrEqualToColumn(IMUser.Column column) {
            addCriterion(new StringBuilder("_mobile <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andMobileLike(String value) {
            addCriterion("_mobile like", value, "mobile");
            return (Criteria) this;
        }

        public Criteria andMobileNotLike(String value) {
            addCriterion("_mobile not like", value, "mobile");
            return (Criteria) this;
        }

        public Criteria andMobileIn(List<String> values) {
            addCriterion("_mobile in", values, "mobile");
            return (Criteria) this;
        }

        public Criteria andMobileNotIn(List<String> values) {
            addCriterion("_mobile not in", values, "mobile");
            return (Criteria) this;
        }

        public Criteria andMobileBetween(String value1, String value2) {
            addCriterion("_mobile between", value1, value2, "mobile");
            return (Criteria) this;
        }

        public Criteria andMobileNotBetween(String value1, String value2) {
            addCriterion("_mobile not between", value1, value2, "mobile");
            return (Criteria) this;
        }

        public Criteria andEmailIsNull() {
            addCriterion("_email is null");
            return (Criteria) this;
        }

        public Criteria andEmailIsNotNull() {
            addCriterion("_email is not null");
            return (Criteria) this;
        }

        public Criteria andEmailEqualTo(String value) {
            addCriterion("_email =", value, "email");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_user
         *
         * @mbg.generated
         */
        public Criteria andEmailEqualToColumn(IMUser.Column column) {
            addCriterion(new StringBuilder("_email = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andEmailNotEqualTo(String value) {
            addCriterion("_email <>", value, "email");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_user
         *
         * @mbg.generated
         */
        public Criteria andEmailNotEqualToColumn(IMUser.Column column) {
            addCriterion(new StringBuilder("_email <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andEmailGreaterThan(String value) {
            addCriterion("_email >", value, "email");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_user
         *
         * @mbg.generated
         */
        public Criteria andEmailGreaterThanColumn(IMUser.Column column) {
            addCriterion(new StringBuilder("_email > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andEmailGreaterThanOrEqualTo(String value) {
            addCriterion("_email >=", value, "email");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_user
         *
         * @mbg.generated
         */
        public Criteria andEmailGreaterThanOrEqualToColumn(IMUser.Column column) {
            addCriterion(new StringBuilder("_email >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andEmailLessThan(String value) {
            addCriterion("_email <", value, "email");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_user
         *
         * @mbg.generated
         */
        public Criteria andEmailLessThanColumn(IMUser.Column column) {
            addCriterion(new StringBuilder("_email < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andEmailLessThanOrEqualTo(String value) {
            addCriterion("_email <=", value, "email");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_user
         *
         * @mbg.generated
         */
        public Criteria andEmailLessThanOrEqualToColumn(IMUser.Column column) {
            addCriterion(new StringBuilder("_email <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andEmailLike(String value) {
            addCriterion("_email like", value, "email");
            return (Criteria) this;
        }

        public Criteria andEmailNotLike(String value) {
            addCriterion("_email not like", value, "email");
            return (Criteria) this;
        }

        public Criteria andEmailIn(List<String> values) {
            addCriterion("_email in", values, "email");
            return (Criteria) this;
        }

        public Criteria andEmailNotIn(List<String> values) {
            addCriterion("_email not in", values, "email");
            return (Criteria) this;
        }

        public Criteria andEmailBetween(String value1, String value2) {
            addCriterion("_email between", value1, value2, "email");
            return (Criteria) this;
        }

        public Criteria andEmailNotBetween(String value1, String value2) {
            addCriterion("_email not between", value1, value2, "email");
            return (Criteria) this;
        }

        public Criteria andAddressIsNull() {
            addCriterion("_address is null");
            return (Criteria) this;
        }

        public Criteria andAddressIsNotNull() {
            addCriterion("_address is not null");
            return (Criteria) this;
        }

        public Criteria andAddressEqualTo(String value) {
            addCriterion("_address =", value, "address");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_user
         *
         * @mbg.generated
         */
        public Criteria andAddressEqualToColumn(IMUser.Column column) {
            addCriterion(new StringBuilder("_address = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAddressNotEqualTo(String value) {
            addCriterion("_address <>", value, "address");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_user
         *
         * @mbg.generated
         */
        public Criteria andAddressNotEqualToColumn(IMUser.Column column) {
            addCriterion(new StringBuilder("_address <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAddressGreaterThan(String value) {
            addCriterion("_address >", value, "address");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_user
         *
         * @mbg.generated
         */
        public Criteria andAddressGreaterThanColumn(IMUser.Column column) {
            addCriterion(new StringBuilder("_address > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAddressGreaterThanOrEqualTo(String value) {
            addCriterion("_address >=", value, "address");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_user
         *
         * @mbg.generated
         */
        public Criteria andAddressGreaterThanOrEqualToColumn(IMUser.Column column) {
            addCriterion(new StringBuilder("_address >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAddressLessThan(String value) {
            addCriterion("_address <", value, "address");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_user
         *
         * @mbg.generated
         */
        public Criteria andAddressLessThanColumn(IMUser.Column column) {
            addCriterion(new StringBuilder("_address < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAddressLessThanOrEqualTo(String value) {
            addCriterion("_address <=", value, "address");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_user
         *
         * @mbg.generated
         */
        public Criteria andAddressLessThanOrEqualToColumn(IMUser.Column column) {
            addCriterion(new StringBuilder("_address <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAddressLike(String value) {
            addCriterion("_address like", value, "address");
            return (Criteria) this;
        }

        public Criteria andAddressNotLike(String value) {
            addCriterion("_address not like", value, "address");
            return (Criteria) this;
        }

        public Criteria andAddressIn(List<String> values) {
            addCriterion("_address in", values, "address");
            return (Criteria) this;
        }

        public Criteria andAddressNotIn(List<String> values) {
            addCriterion("_address not in", values, "address");
            return (Criteria) this;
        }

        public Criteria andAddressBetween(String value1, String value2) {
            addCriterion("_address between", value1, value2, "address");
            return (Criteria) this;
        }

        public Criteria andAddressNotBetween(String value1, String value2) {
            addCriterion("_address not between", value1, value2, "address");
            return (Criteria) this;
        }

        public Criteria andCompanyIsNull() {
            addCriterion("_company is null");
            return (Criteria) this;
        }

        public Criteria andCompanyIsNotNull() {
            addCriterion("_company is not null");
            return (Criteria) this;
        }

        public Criteria andCompanyEqualTo(String value) {
            addCriterion("_company =", value, "company");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_user
         *
         * @mbg.generated
         */
        public Criteria andCompanyEqualToColumn(IMUser.Column column) {
            addCriterion(new StringBuilder("_company = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCompanyNotEqualTo(String value) {
            addCriterion("_company <>", value, "company");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_user
         *
         * @mbg.generated
         */
        public Criteria andCompanyNotEqualToColumn(IMUser.Column column) {
            addCriterion(new StringBuilder("_company <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCompanyGreaterThan(String value) {
            addCriterion("_company >", value, "company");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_user
         *
         * @mbg.generated
         */
        public Criteria andCompanyGreaterThanColumn(IMUser.Column column) {
            addCriterion(new StringBuilder("_company > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCompanyGreaterThanOrEqualTo(String value) {
            addCriterion("_company >=", value, "company");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_user
         *
         * @mbg.generated
         */
        public Criteria andCompanyGreaterThanOrEqualToColumn(IMUser.Column column) {
            addCriterion(new StringBuilder("_company >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCompanyLessThan(String value) {
            addCriterion("_company <", value, "company");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_user
         *
         * @mbg.generated
         */
        public Criteria andCompanyLessThanColumn(IMUser.Column column) {
            addCriterion(new StringBuilder("_company < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCompanyLessThanOrEqualTo(String value) {
            addCriterion("_company <=", value, "company");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_user
         *
         * @mbg.generated
         */
        public Criteria andCompanyLessThanOrEqualToColumn(IMUser.Column column) {
            addCriterion(new StringBuilder("_company <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCompanyLike(String value) {
            addCriterion("_company like", value, "company");
            return (Criteria) this;
        }

        public Criteria andCompanyNotLike(String value) {
            addCriterion("_company not like", value, "company");
            return (Criteria) this;
        }

        public Criteria andCompanyIn(List<String> values) {
            addCriterion("_company in", values, "company");
            return (Criteria) this;
        }

        public Criteria andCompanyNotIn(List<String> values) {
            addCriterion("_company not in", values, "company");
            return (Criteria) this;
        }

        public Criteria andCompanyBetween(String value1, String value2) {
            addCriterion("_company between", value1, value2, "company");
            return (Criteria) this;
        }

        public Criteria andCompanyNotBetween(String value1, String value2) {
            addCriterion("_company not between", value1, value2, "company");
            return (Criteria) this;
        }

        public Criteria andSocialIsNull() {
            addCriterion("_social is null");
            return (Criteria) this;
        }

        public Criteria andSocialIsNotNull() {
            addCriterion("_social is not null");
            return (Criteria) this;
        }

        public Criteria andSocialEqualTo(String value) {
            addCriterion("_social =", value, "social");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_user
         *
         * @mbg.generated
         */
        public Criteria andSocialEqualToColumn(IMUser.Column column) {
            addCriterion(new StringBuilder("_social = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSocialNotEqualTo(String value) {
            addCriterion("_social <>", value, "social");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_user
         *
         * @mbg.generated
         */
        public Criteria andSocialNotEqualToColumn(IMUser.Column column) {
            addCriterion(new StringBuilder("_social <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSocialGreaterThan(String value) {
            addCriterion("_social >", value, "social");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_user
         *
         * @mbg.generated
         */
        public Criteria andSocialGreaterThanColumn(IMUser.Column column) {
            addCriterion(new StringBuilder("_social > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSocialGreaterThanOrEqualTo(String value) {
            addCriterion("_social >=", value, "social");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_user
         *
         * @mbg.generated
         */
        public Criteria andSocialGreaterThanOrEqualToColumn(IMUser.Column column) {
            addCriterion(new StringBuilder("_social >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSocialLessThan(String value) {
            addCriterion("_social <", value, "social");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_user
         *
         * @mbg.generated
         */
        public Criteria andSocialLessThanColumn(IMUser.Column column) {
            addCriterion(new StringBuilder("_social < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSocialLessThanOrEqualTo(String value) {
            addCriterion("_social <=", value, "social");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_user
         *
         * @mbg.generated
         */
        public Criteria andSocialLessThanOrEqualToColumn(IMUser.Column column) {
            addCriterion(new StringBuilder("_social <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSocialLike(String value) {
            addCriterion("_social like", value, "social");
            return (Criteria) this;
        }

        public Criteria andSocialNotLike(String value) {
            addCriterion("_social not like", value, "social");
            return (Criteria) this;
        }

        public Criteria andSocialIn(List<String> values) {
            addCriterion("_social in", values, "social");
            return (Criteria) this;
        }

        public Criteria andSocialNotIn(List<String> values) {
            addCriterion("_social not in", values, "social");
            return (Criteria) this;
        }

        public Criteria andSocialBetween(String value1, String value2) {
            addCriterion("_social between", value1, value2, "social");
            return (Criteria) this;
        }

        public Criteria andSocialNotBetween(String value1, String value2) {
            addCriterion("_social not between", value1, value2, "social");
            return (Criteria) this;
        }

        public Criteria andPasswdMd5IsNull() {
            addCriterion("_passwd_md5 is null");
            return (Criteria) this;
        }

        public Criteria andPasswdMd5IsNotNull() {
            addCriterion("_passwd_md5 is not null");
            return (Criteria) this;
        }

        public Criteria andPasswdMd5EqualTo(String value) {
            addCriterion("_passwd_md5 =", value, "passwdMd5");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_user
         *
         * @mbg.generated
         */
        public Criteria andPasswdMd5EqualToColumn(IMUser.Column column) {
            addCriterion(new StringBuilder("_passwd_md5 = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPasswdMd5NotEqualTo(String value) {
            addCriterion("_passwd_md5 <>", value, "passwdMd5");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_user
         *
         * @mbg.generated
         */
        public Criteria andPasswdMd5NotEqualToColumn(IMUser.Column column) {
            addCriterion(new StringBuilder("_passwd_md5 <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPasswdMd5GreaterThan(String value) {
            addCriterion("_passwd_md5 >", value, "passwdMd5");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_user
         *
         * @mbg.generated
         */
        public Criteria andPasswdMd5GreaterThanColumn(IMUser.Column column) {
            addCriterion(new StringBuilder("_passwd_md5 > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPasswdMd5GreaterThanOrEqualTo(String value) {
            addCriterion("_passwd_md5 >=", value, "passwdMd5");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_user
         *
         * @mbg.generated
         */
        public Criteria andPasswdMd5GreaterThanOrEqualToColumn(IMUser.Column column) {
            addCriterion(new StringBuilder("_passwd_md5 >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPasswdMd5LessThan(String value) {
            addCriterion("_passwd_md5 <", value, "passwdMd5");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_user
         *
         * @mbg.generated
         */
        public Criteria andPasswdMd5LessThanColumn(IMUser.Column column) {
            addCriterion(new StringBuilder("_passwd_md5 < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPasswdMd5LessThanOrEqualTo(String value) {
            addCriterion("_passwd_md5 <=", value, "passwdMd5");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_user
         *
         * @mbg.generated
         */
        public Criteria andPasswdMd5LessThanOrEqualToColumn(IMUser.Column column) {
            addCriterion(new StringBuilder("_passwd_md5 <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPasswdMd5Like(String value) {
            addCriterion("_passwd_md5 like", value, "passwdMd5");
            return (Criteria) this;
        }

        public Criteria andPasswdMd5NotLike(String value) {
            addCriterion("_passwd_md5 not like", value, "passwdMd5");
            return (Criteria) this;
        }

        public Criteria andPasswdMd5In(List<String> values) {
            addCriterion("_passwd_md5 in", values, "passwdMd5");
            return (Criteria) this;
        }

        public Criteria andPasswdMd5NotIn(List<String> values) {
            addCriterion("_passwd_md5 not in", values, "passwdMd5");
            return (Criteria) this;
        }

        public Criteria andPasswdMd5Between(String value1, String value2) {
            addCriterion("_passwd_md5 between", value1, value2, "passwdMd5");
            return (Criteria) this;
        }

        public Criteria andPasswdMd5NotBetween(String value1, String value2) {
            addCriterion("_passwd_md5 not between", value1, value2, "passwdMd5");
            return (Criteria) this;
        }

        public Criteria andSaltIsNull() {
            addCriterion("_salt is null");
            return (Criteria) this;
        }

        public Criteria andSaltIsNotNull() {
            addCriterion("_salt is not null");
            return (Criteria) this;
        }

        public Criteria andSaltEqualTo(String value) {
            addCriterion("_salt =", value, "salt");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_user
         *
         * @mbg.generated
         */
        public Criteria andSaltEqualToColumn(IMUser.Column column) {
            addCriterion(new StringBuilder("_salt = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSaltNotEqualTo(String value) {
            addCriterion("_salt <>", value, "salt");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_user
         *
         * @mbg.generated
         */
        public Criteria andSaltNotEqualToColumn(IMUser.Column column) {
            addCriterion(new StringBuilder("_salt <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSaltGreaterThan(String value) {
            addCriterion("_salt >", value, "salt");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_user
         *
         * @mbg.generated
         */
        public Criteria andSaltGreaterThanColumn(IMUser.Column column) {
            addCriterion(new StringBuilder("_salt > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSaltGreaterThanOrEqualTo(String value) {
            addCriterion("_salt >=", value, "salt");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_user
         *
         * @mbg.generated
         */
        public Criteria andSaltGreaterThanOrEqualToColumn(IMUser.Column column) {
            addCriterion(new StringBuilder("_salt >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSaltLessThan(String value) {
            addCriterion("_salt <", value, "salt");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_user
         *
         * @mbg.generated
         */
        public Criteria andSaltLessThanColumn(IMUser.Column column) {
            addCriterion(new StringBuilder("_salt < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSaltLessThanOrEqualTo(String value) {
            addCriterion("_salt <=", value, "salt");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_user
         *
         * @mbg.generated
         */
        public Criteria andSaltLessThanOrEqualToColumn(IMUser.Column column) {
            addCriterion(new StringBuilder("_salt <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSaltLike(String value) {
            addCriterion("_salt like", value, "salt");
            return (Criteria) this;
        }

        public Criteria andSaltNotLike(String value) {
            addCriterion("_salt not like", value, "salt");
            return (Criteria) this;
        }

        public Criteria andSaltIn(List<String> values) {
            addCriterion("_salt in", values, "salt");
            return (Criteria) this;
        }

        public Criteria andSaltNotIn(List<String> values) {
            addCriterion("_salt not in", values, "salt");
            return (Criteria) this;
        }

        public Criteria andSaltBetween(String value1, String value2) {
            addCriterion("_salt between", value1, value2, "salt");
            return (Criteria) this;
        }

        public Criteria andSaltNotBetween(String value1, String value2) {
            addCriterion("_salt not between", value1, value2, "salt");
            return (Criteria) this;
        }

        public Criteria andTypeIsNull() {
            addCriterion("_type is null");
            return (Criteria) this;
        }

        public Criteria andTypeIsNotNull() {
            addCriterion("_type is not null");
            return (Criteria) this;
        }

        public Criteria andTypeEqualTo(Byte value) {
            addCriterion("_type =", value, "type");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_user
         *
         * @mbg.generated
         */
        public Criteria andTypeEqualToColumn(IMUser.Column column) {
            addCriterion(new StringBuilder("_type = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTypeNotEqualTo(Byte value) {
            addCriterion("_type <>", value, "type");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_user
         *
         * @mbg.generated
         */
        public Criteria andTypeNotEqualToColumn(IMUser.Column column) {
            addCriterion(new StringBuilder("_type <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTypeGreaterThan(Byte value) {
            addCriterion("_type >", value, "type");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_user
         *
         * @mbg.generated
         */
        public Criteria andTypeGreaterThanColumn(IMUser.Column column) {
            addCriterion(new StringBuilder("_type > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTypeGreaterThanOrEqualTo(Byte value) {
            addCriterion("_type >=", value, "type");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_user
         *
         * @mbg.generated
         */
        public Criteria andTypeGreaterThanOrEqualToColumn(IMUser.Column column) {
            addCriterion(new StringBuilder("_type >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTypeLessThan(Byte value) {
            addCriterion("_type <", value, "type");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_user
         *
         * @mbg.generated
         */
        public Criteria andTypeLessThanColumn(IMUser.Column column) {
            addCriterion(new StringBuilder("_type < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTypeLessThanOrEqualTo(Byte value) {
            addCriterion("_type <=", value, "type");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_user
         *
         * @mbg.generated
         */
        public Criteria andTypeLessThanOrEqualToColumn(IMUser.Column column) {
            addCriterion(new StringBuilder("_type <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTypeIn(List<Byte> values) {
            addCriterion("_type in", values, "type");
            return (Criteria) this;
        }

        public Criteria andTypeNotIn(List<Byte> values) {
            addCriterion("_type not in", values, "type");
            return (Criteria) this;
        }

        public Criteria andTypeBetween(Byte value1, Byte value2) {
            addCriterion("_type between", value1, value2, "type");
            return (Criteria) this;
        }

        public Criteria andTypeNotBetween(Byte value1, Byte value2) {
            addCriterion("_type not between", value1, value2, "type");
            return (Criteria) this;
        }

        public Criteria andDtIsNull() {
            addCriterion("_dt is null");
            return (Criteria) this;
        }

        public Criteria andDtIsNotNull() {
            addCriterion("_dt is not null");
            return (Criteria) this;
        }

        public Criteria andDtEqualTo(Long value) {
            addCriterion("_dt =", value, "dt");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_user
         *
         * @mbg.generated
         */
        public Criteria andDtEqualToColumn(IMUser.Column column) {
            addCriterion(new StringBuilder("_dt = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDtNotEqualTo(Long value) {
            addCriterion("_dt <>", value, "dt");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_user
         *
         * @mbg.generated
         */
        public Criteria andDtNotEqualToColumn(IMUser.Column column) {
            addCriterion(new StringBuilder("_dt <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDtGreaterThan(Long value) {
            addCriterion("_dt >", value, "dt");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_user
         *
         * @mbg.generated
         */
        public Criteria andDtGreaterThanColumn(IMUser.Column column) {
            addCriterion(new StringBuilder("_dt > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDtGreaterThanOrEqualTo(Long value) {
            addCriterion("_dt >=", value, "dt");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_user
         *
         * @mbg.generated
         */
        public Criteria andDtGreaterThanOrEqualToColumn(IMUser.Column column) {
            addCriterion(new StringBuilder("_dt >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDtLessThan(Long value) {
            addCriterion("_dt <", value, "dt");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_user
         *
         * @mbg.generated
         */
        public Criteria andDtLessThanColumn(IMUser.Column column) {
            addCriterion(new StringBuilder("_dt < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDtLessThanOrEqualTo(Long value) {
            addCriterion("_dt <=", value, "dt");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_user
         *
         * @mbg.generated
         */
        public Criteria andDtLessThanOrEqualToColumn(IMUser.Column column) {
            addCriterion(new StringBuilder("_dt <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDtIn(List<Long> values) {
            addCriterion("_dt in", values, "dt");
            return (Criteria) this;
        }

        public Criteria andDtNotIn(List<Long> values) {
            addCriterion("_dt not in", values, "dt");
            return (Criteria) this;
        }

        public Criteria andDtBetween(Long value1, Long value2) {
            addCriterion("_dt between", value1, value2, "dt");
            return (Criteria) this;
        }

        public Criteria andDtNotBetween(Long value1, Long value2) {
            addCriterion("_dt not between", value1, value2, "dt");
            return (Criteria) this;
        }

        public Criteria andCreatetimeIsNull() {
            addCriterion("_createTime is null");
            return (Criteria) this;
        }

        public Criteria andCreatetimeIsNotNull() {
            addCriterion("_createTime is not null");
            return (Criteria) this;
        }

        public Criteria andCreatetimeEqualTo(LocalDateTime value) {
            addCriterion("_createTime =", value, "createtime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_user
         *
         * @mbg.generated
         */
        public Criteria andCreatetimeEqualToColumn(IMUser.Column column) {
            addCriterion(new StringBuilder("_createTime = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreatetimeNotEqualTo(LocalDateTime value) {
            addCriterion("_createTime <>", value, "createtime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_user
         *
         * @mbg.generated
         */
        public Criteria andCreatetimeNotEqualToColumn(IMUser.Column column) {
            addCriterion(new StringBuilder("_createTime <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreatetimeGreaterThan(LocalDateTime value) {
            addCriterion("_createTime >", value, "createtime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_user
         *
         * @mbg.generated
         */
        public Criteria andCreatetimeGreaterThanColumn(IMUser.Column column) {
            addCriterion(new StringBuilder("_createTime > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreatetimeGreaterThanOrEqualTo(LocalDateTime value) {
            addCriterion("_createTime >=", value, "createtime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_user
         *
         * @mbg.generated
         */
        public Criteria andCreatetimeGreaterThanOrEqualToColumn(IMUser.Column column) {
            addCriterion(new StringBuilder("_createTime >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreatetimeLessThan(LocalDateTime value) {
            addCriterion("_createTime <", value, "createtime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_user
         *
         * @mbg.generated
         */
        public Criteria andCreatetimeLessThanColumn(IMUser.Column column) {
            addCriterion(new StringBuilder("_createTime < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreatetimeLessThanOrEqualTo(LocalDateTime value) {
            addCriterion("_createTime <=", value, "createtime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_user
         *
         * @mbg.generated
         */
        public Criteria andCreatetimeLessThanOrEqualToColumn(IMUser.Column column) {
            addCriterion(new StringBuilder("_createTime <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreatetimeIn(List<LocalDateTime> values) {
            addCriterion("_createTime in", values, "createtime");
            return (Criteria) this;
        }

        public Criteria andCreatetimeNotIn(List<LocalDateTime> values) {
            addCriterion("_createTime not in", values, "createtime");
            return (Criteria) this;
        }

        public Criteria andCreatetimeBetween(LocalDateTime value1, LocalDateTime value2) {
            addCriterion("_createTime between", value1, value2, "createtime");
            return (Criteria) this;
        }

        public Criteria andCreatetimeNotBetween(LocalDateTime value1, LocalDateTime value2) {
            addCriterion("_createTime not between", value1, value2, "createtime");
            return (Criteria) this;
        }

        public Criteria andDeletedIsNull() {
            addCriterion("_deleted is null");
            return (Criteria) this;
        }

        public Criteria andDeletedIsNotNull() {
            addCriterion("_deleted is not null");
            return (Criteria) this;
        }

        public Criteria andDeletedEqualTo(Boolean value) {
            addCriterion("_deleted =", value, "deleted");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_user
         *
         * @mbg.generated
         */
        public Criteria andDeletedEqualToColumn(IMUser.Column column) {
            addCriterion(new StringBuilder("_deleted = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDeletedNotEqualTo(Byte value) {
            addCriterion("_deleted <>", value, "deleted");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_user
         *
         * @mbg.generated
         */
        public Criteria andDeletedNotEqualToColumn(IMUser.Column column) {
            addCriterion(new StringBuilder("_deleted <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDeletedGreaterThan(Byte value) {
            addCriterion("_deleted >", value, "deleted");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_user
         *
         * @mbg.generated
         */
        public Criteria andDeletedGreaterThanColumn(IMUser.Column column) {
            addCriterion(new StringBuilder("_deleted > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDeletedGreaterThanOrEqualTo(Byte value) {
            addCriterion("_deleted >=", value, "deleted");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_user
         *
         * @mbg.generated
         */
        public Criteria andDeletedGreaterThanOrEqualToColumn(IMUser.Column column) {
            addCriterion(new StringBuilder("_deleted >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDeletedLessThan(Byte value) {
            addCriterion("_deleted <", value, "deleted");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_user
         *
         * @mbg.generated
         */
        public Criteria andDeletedLessThanColumn(IMUser.Column column) {
            addCriterion(new StringBuilder("_deleted < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDeletedLessThanOrEqualTo(Byte value) {
            addCriterion("_deleted <=", value, "deleted");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_user
         *
         * @mbg.generated
         */
        public Criteria andDeletedLessThanOrEqualToColumn(IMUser.Column column) {
            addCriterion(new StringBuilder("_deleted <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDeletedIn(List<Byte> values) {
            addCriterion("_deleted in", values, "deleted");
            return (Criteria) this;
        }

        public Criteria andDeletedNotIn(List<Byte> values) {
            addCriterion("_deleted not in", values, "deleted");
            return (Criteria) this;
        }

        public Criteria andDeletedBetween(Byte value1, Byte value2) {
            addCriterion("_deleted between", value1, value2, "deleted");
            return (Criteria) this;
        }

        public Criteria andDeletedNotBetween(Byte value1, Byte value2) {
            addCriterion("_deleted not between", value1, value2, "deleted");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table t_user
     *
     * @mbg.generated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {
        /**
         * This field was generated by MyBatis Generator.
         * This field corresponds to the database table t_user
         *
         * @mbg.generated
         */
        private IMUserExample example;

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_user
         *
         * @mbg.generated
         */
        protected Criteria(IMUserExample example) {
            super();
            this.example = example;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_user
         *
         * @mbg.generated
         */
        public IMUserExample example() {
            return this.example;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_user
         *
         * @mbg.generated
         */
        @Deprecated
        public Criteria andIf(boolean ifAdd, ICriteriaAdd add) {
            if (ifAdd) {
                add.add(this);
            }
            return this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_user
         *
         * @mbg.generated
         */
        public Criteria when(boolean condition, ICriteriaWhen then) {
            if (condition) {
                then.criteria(this);
            }
            return this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_user
         *
         * @mbg.generated
         */
        public Criteria when(boolean condition, ICriteriaWhen then, ICriteriaWhen otherwise) {
            if (condition) {
                then.criteria(this);
            } else {
                otherwise.criteria(this);
            }
            return this;
        }

        @Deprecated
        public interface ICriteriaAdd {
            /**
             * This method was generated by MyBatis Generator.
             * This method corresponds to the database table t_user
             *
             * @mbg.generated
             */
            Criteria add(Criteria add);
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table t_user
     *
     * @mbg.generated
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }

    public interface ICriteriaWhen {
        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_user
         *
         * @mbg.generated
         */
        void criteria(Criteria criteria);
    }

    public interface IExampleWhen {
        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table t_user
         *
         * @mbg.generated
         */
        void example(IMUserExample example);
    }
}